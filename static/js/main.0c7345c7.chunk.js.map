{"version":3,"sources":["components/Button/Button.module.css","components/TaskForm/TaskForm.module.css","components/TaskList/TaskList.module.css","components/TaskCounter/TaskCounter.module.css","components/Layout/Layout.module.css","components/StatusFilter/StatusFilter.module.css","components/Layout/Layout.js","components/Button/Button.js","components/TaskForm/TaskForm.js","redux/actions.js","components/Task/Task.js","redux/constants.js","redux/selectors.js","components/TaskList/TaskList.js","components/StatusFilter/StatusFilter.js","components/TaskCounter/TaskCounter.js","components/AppBar/AppBar.js","components/App.js","redux/reducer.js","redux/store.js","index.js","components/AppBar/AppBar.module.css","components/Task/Task.module.css"],"names":["module","exports","Layout","children","className","css","container","Button","selected","type","otherProps","clsx","btn","isSelected","TaskForm","dispatch","useDispatch","form","onSubmit","event","preventDefault","text","target","elements","value","payload","id","nanoid","completed","reset","field","name","placeholder","Task","task","wrapper","checkbox","checked","onChange","onClick","size","statusFilters","Object","freeze","all","active","getTasks","state","tasks","getStatusFilter","filters","status","TaskList","visibleTasks","statusFilter","filter","getVisibleTasks","useSelector","list","map","listItem","StatusFilter","handleFilterChange","TaskCounter","count","reduce","acc","AppBar","section","title","App","taskInitialState","filtersInitialState","rootReducer","combineReducers","action","enhancer","devToolsEnhancer","store","createStore","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0c7345c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3xaJM\",\"isSelected\":\"Button_isSelected__2JVMn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__1kzwH\",\"field\":\"TaskForm_field__8trCg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TaskList_list__2xVr5\",\"listItem\":\"TaskList_listItem__XeAAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"TaskCounter_text__3WbH2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Layout_container__1nNA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"StatusFilter_wrapper__1VEdi\"};","import css from './Layout.module.css';\n\nexport const Layout = ({ children }) => {\n  return <main className={css.container}>{children}</main>;\n};\n","import clsx from 'clsx';\nimport css from './Button.module.css';\n\nexport const Button = ({\n  selected = false,\n  type = 'button',\n  children,\n  ...otherProps\n}) => {\n  return (\n    <button\n      className={clsx(css.btn, {\n        [css.isSelected]: selected,\n      })}\n      type={type}\n      {...otherProps}\n    >\n      {children}\n    </button>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { Button } from 'components/Button/Button';\nimport css from './TaskForm.module.css';\nimport { addTask } from 'redux/actions';\n\nexport const TaskForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    dispatch(addTask(form.elements.text.value));\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.field}\n        type=\"text\"\n        name=\"text\"\n        placeholder=\"Enter task text...\"\n      />\n      <Button type=\"submit\">Add task</Button>\n    </form>\n  );\n};\n","import { nanoid } from 'nanoid';\n\nexport const addTask = text => {\n  return {\n    type: 'tasks/addTask',\n    payload: {\n      id: nanoid(),\n      completed: false,\n      text,\n    },\n  };\n};\n\nexport const deleteTask = taskId => {\n  return {\n    type: 'tasks/deleteTask',\n    payload: taskId,\n  };\n};\n\nexport const toggleCompleted = taskId => {\n  return {\n    type: 'tasks/toggleCompleted',\n    payload: taskId,\n  };\n};\n\nexport const setStatusFilter = value => {\n  return {\n    type: 'filters/setStatusFilter',\n    payload: value,\n  };\n};\n","import { useDispatch } from 'react-redux';\nimport { MdClose } from 'react-icons/md';\nimport css from './Task.module.css';\nimport { deleteTask, toggleCompleted } from 'redux/actions';\n\nexport const Task = ({ task }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteTask(task.id));\n  const handleToggle = () => dispatch(toggleCompleted(task.id));\n\n  return (\n    <div className={css.wrapper}>\n      <input\n        type=\"checkbox\"\n        className={css.checkbox}\n        checked={task.completed}\n        onChange={handleToggle}\n      />\n      <p className={css.text}>{task.text}</p>\n      <button type=\"button\" className={css.btn} onClick={handleDelete}>\n        <MdClose size={24} />\n      </button>\n    </div>\n  );\n};\n","export const statusFilters = Object.freeze({\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n});\n","export const getTasks = state => state.tasks;\nexport const getStatusFilter = state => state.filters.status;","import { useSelector } from 'react-redux';\nimport { Task } from 'components/Task/Task';\nimport css from './TaskList.module.css';\nimport { statusFilters } from 'redux/constants';\nimport { getStatusFilter, getTasks } from 'redux/selectors';\n\nconst getVisibleTasks = (tasks, statusFilter) => {\n  switch (statusFilter) {\n    case statusFilters.active:\n      return tasks.filter(task => !task.completed);\n    case statusFilters.completed:\n      return tasks.filter(task => task.completed);\n    default:\n      return tasks;\n  }\n};\n\nexport const TaskList = () => {\n  const tasks = useSelector(getTasks);\n  const statusFilter = useSelector(getStatusFilter);\n  const visibleTasks = getVisibleTasks(tasks, statusFilter);\n  return (\n    <ul className={css.list}>\n      {visibleTasks.map(task => (\n        <li className={css.listItem} key={task.id}>\n          <Task task={task} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'components/Button/Button';\nimport css from './StatusFilter.module.css';\nimport { statusFilters } from 'redux/constants';\nimport { getStatusFilter } from 'redux/selectors';\nimport { setStatusFilter } from 'redux/actions';\n\nexport const StatusFilter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getStatusFilter);\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n\n  return (\n    <div className={css.wrapper}>\n      <Button\n        selected={filter === statusFilters.all}\n        onClick={() => handleFilterChange(statusFilters.all)}\n      >\n        All\n      </Button>\n      <Button\n        selected={filter === statusFilters.active}\n        onClick={() => handleFilterChange(statusFilters.active)}\n      >\n        Active\n      </Button>\n      <Button\n        selected={filter === statusFilters.completed}\n        onClick={() => handleFilterChange(statusFilters.completed)}\n      >\n        Completed\n      </Button>\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { getTasks } from 'redux/selectors';\nimport css from './TaskCounter.module.css';\n\nexport const TaskCounter = () => {\n  const tasks = useSelector(getTasks);\n\n  const count = tasks.reduce(\n    (acc, task) => {\n      if (task.completed) {\n        acc.completed += 1;\n      } else {\n        acc.active += 1;\n      }\n      return acc;\n    },\n    { active: 0, completed: 0 }\n  );\n\n  return (\n    <div>\n      <p className={css.text}>Active: {count.active}</p>\n      <p className={css.text}>Completed: {count.completed}</p>\n    </div>\n  );\n};\n","import { StatusFilter } from 'components/StatusFilter/StatusFilter';\nimport { TaskCounter } from 'components/TaskCounter/TaskCounter';\nimport css from './AppBar.module.css';\n\nexport const AppBar = () => {\n  return (\n    <header className={css.wrapper}>\n      <section className={css.section}>\n        <h2 className={css.title}>Tasks</h2>\n        <TaskCounter />\n      </section>\n      <section className={css.section}>\n        <h2 className={css.title}>Filter by status</h2>\n        <StatusFilter />\n      </section>\n    </header>\n  );\n};\n","import 'modern-normalize';\nimport { Layout } from './Layout/Layout';\nimport { TaskForm } from './TaskForm/TaskForm';\nimport { TaskList } from './TaskList/TaskList';\nimport { AppBar } from './AppBar/AppBar';\n\nexport const App = () => {\n  return (\n    <Layout>\n      <AppBar />\n      <TaskForm />\n      <TaskList />\n    </Layout>\n  );\n};\n","import { combineReducers } from 'redux';\nimport { statusFilters } from './constants';\n\nconst taskInitialState = [\n  { id: 0, text: 'Learn HTML and CSS', completed: true },\n  { id: 1, text: 'Get good at JavaScript', completed: true },\n  { id: 2, text: 'Master React', completed: false },\n  { id: 3, text: 'Discover Redux', completed: false },\n  { id: 4, text: 'Build amazing apps', completed: false },\n];\n\nconst tasksReducer = (state = taskInitialState, action) => {\n  switch (action.type) {\n    case 'tasks/addTask': {\n      return [...state, action.payload];\n    }\n\n    case 'tasks/deleteTask': {\n      return state.filter(task => task.id !== action.payload);\n    }\n\n    case 'tasks/toggleCompleted':\n      return state.map(task => {\n        if (task.id !== action.payload) {\n          return task;\n        }\n        return { ...task, completed: !task.completed };\n      });\n\n    default:\n      return state;\n  }\n};\n\nconst filtersInitialState = {\n  status: statusFilters.all,\n};\nconst filtersReducer = (state = filtersInitialState, action) => {\n  switch (action.type) {\n    case 'filters/setStatusFilter':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  tasks: tasksReducer,\n  filters: filtersReducer,\n});\n","import { createStore } from 'redux';\nimport { devToolsEnhancer } from '@redux-devtools/extension';\nimport { rootReducer } from './reducer';\n\nconst enhancer = devToolsEnhancer();\n\nexport const store = createStore(rootReducer, enhancer);\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { App } from 'components/App';\nimport { store } from './redux/store';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AppBar_wrapper__21lfN\",\"section\":\"AppBar_section__3Iy4s\",\"title\":\"AppBar_title__JfHv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Task_wrapper__1Un4J\",\"text\":\"Task_text__7szr-\",\"btn\":\"Task_btn__2cnNo\",\"checkbox\":\"Task_checkbox__1kBaq\"};"],"sourceRoot":""}